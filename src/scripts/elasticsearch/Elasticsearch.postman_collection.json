{
	"variables": [],
	"info": {
		"name": "Elasticsearch",
		"_postman_id": "27eda0e4-fdb6-b29b-6dab-341f1209a184",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Cluster Management",
			"description": "",
			"item": [
				{
					"name": "Disable Shard Allocation",
					"request": {
						"url": "http://{{eshost}}/_cluster/settings",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"transient\": {\n    \"cluster.routing.allocation.enable\": \"none\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Enable Shard Allocation",
					"request": {
						"url": "http://{{eshost}}/_cluster/settings",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"transient\": {\n    \"cluster.routing.allocation.enable\": \"all\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Node Decommission",
					"request": {
						"url": "http://{{eshost}}/_cluster/settings",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transient\" : {\n        \"cluster.routing.allocation.exclude._host\" : \"betawebXXX.medien.uni-weimar.de\"\n    }\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Index Management",
			"description": "",
			"item": [
				{
					"name": "Create Index",
					"request": {
						"url": "http://{{eshost}}/{{index}}/",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"settings\" : {\n        \"index\" : {\n            \"number_of_shards\" : 40,\n            \"number_of_replicas\" : 0\n        }\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Index",
					"request": {
						"url": "http://{{eshost}}/{{index}}/",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Set Refresh Rate",
					"request": {
						"url": "http://{{eshost}}/{{index}}/_settings",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"index\" : {\n        \"refresh_interval\" : \"3600s\"\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Set Webis WARC Template",
					"request": {
						"url": "http://{{eshost}}/_template/webis_warc_template",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"template\" : \"webis_warc_*\",\n    \"settings\" : {\n        \"index.query.default_field\" : \"body_lang.en\",\n        \"index\" : {\n            \"number_of_replicas\" : 0\n        },\n        \"analysis\" : {\n            \"filter\" : {\n                \"host_pre_filter\" : {\n                    \"type\" : \"pattern_capture\",\n                    \"preserve_original\" : false,\n                    \"patterns\" : [\n                        \"^(?:www\\\\d?\\\\.)(.+\\\\..+)$\"\n                    ]\n                },\n                \"host_stop_filter\" : {\n                    \"type\" : \"stop\",\n                    \"stopwords\" : [\n                        \"com\", \"net\", \"org\",\n                        \"ac\", \"ad\", \"ae\", \"af\", \"ag\", \"ai\", \"al\", \"am\", \"an\", \"ao\", \"aq\", \"ar\", \"as\", \"at\", \"au\",\n                        \"aw\", \"ax\", \"az\", \"ba\", \"bb\", \"bd\", \"be\", \"bf\", \"bg\", \"bh\", \"bi\", \"bj\", \"bm\", \"bn\", \"bo\",\n                        \"br\", \"bs\", \"bt\", \"bv\", \"bw\", \"by\", \"bz\", \"ca\", \"cc\", \"cd\", \"cf\", \"cg\", \"ch\", \"ci\", \"ck\",\n                        \"cl\", \"cm\", \"cn\", \"co\", \"cr\", \"cs\", \"cu\", \"cv\", \"cx\", \"cy\", \"cz\", \"dd\", \"de\", \"dj\", \"dk\",\n                        \"dm\", \"do\", \"dz\", \"ec\", \"ee\", \"eg\", \"eh\", \"er\", \"es\", \"et\", \"eu\", \"fi\", \"fj\", \"fk\", \"fm\",\n                        \"fo\", \"fr\", \"ga\", \"gb\", \"gd\", \"ge\", \"gf\", \"gg\", \"gh\", \"gi\", \"gl\", \"gm\", \"gn\", \"gp\", \"gq\",\n                        \"gr\", \"gs\", \"gt\", \"gu\", \"gw\", \"gy\", \"hk\", \"hm\", \"hn\", \"hr\", \"ht\", \"hu\", \"id\", \"ie\", \"il\",\n                        \"im\", \"in\", \"io\", \"iq\", \"ir\", \"is\", \"it\", \"je\", \"jm\", \"jo\", \"jp\", \"ke\", \"kg\", \"kh\", \"ki\",\n                        \"km\", \"kn\", \"kp\", \"kr\", \"kw\", \"ky\", \"kz\", \"la\", \"lb\", \"lc\", \"li\", \"lk\", \"lr\", \"ls\", \"lt\",\n                        \"lu\", \"lv\", \"ly\", \"ma\", \"mc\", \"md\", \"me\", \"mg\", \"mh\", \"mk\", \"ml\", \"mm\", \"mn\", \"mo\", \"mp\",\n                        \"mq\", \"mr\", \"ms\", \"mt\", \"mu\", \"mv\", \"mw\", \"mx\", \"my\", \"mz\", \"na\", \"nc\", \"ne\", \"nf\", \"ng\",\n                        \"ni\", \"nl\", \"no\", \"np\", \"nr\", \"nu\", \"nz\", \"om\", \"pa\", \"pe\", \"pf\", \"pg\", \"ph\", \"pk\", \"pl\",\n                        \"pm\", \"pn\", \"pr\", \"ps\", \"pt\", \"pw\", \"py\", \"qa\", \"re\", \"ro\", \"rs\", \"ru\", \"rw\", \"sa\", \"sb\",\n                        \"sc\", \"sd\", \"se\", \"sg\", \"sh\", \"si\", \"sj\", \"sk\", \"sl\", \"sm\", \"sn\", \"so\", \"sr\", \"st\", \"su\",\n                        \"sv\", \"sy\", \"sz\", \"tc\", \"td\", \"tf\", \"tg\", \"th\", \"tj\", \"tk\", \"tl\", \"tm\", \"tn\", \"to\", \"tp\",\n                        \"tr\", \"tt\", \"tv\", \"tw\", \"tz\", \"ua\", \"ug\", \"uk\", \"um\", \"us\", \"uy\", \"uz\", \"va\", \"vc\", \"ve\",\n                        \"vg\", \"vi\", \"vn\", \"vu\", \"wf\", \"ws\", \"ye\", \"yt\", \"yu\", \"za\", \"zm\", \"zr\", \"zw\"\n                    ]\n                },\n                \"host_delimiter_filter1\" : {\n                    \"type\" : \"word_delimiter\",\n                    \"generate_word_parts\" : true,\n                    \"catenate_words\" : true,\n                    \"catenate_numbers\" : true,\n                    \"preserve_original\" : true,\n                    \"stem_english_possessive\" : true,\n                    \"split_on_numerics\" : false\n                },\n                \"host_delimiter_filter2\" : {\n                    \"type\" : \"pattern_capture\",\n                    \"preserve_original\" : true,\n                    \"patterns\" : [\n                        \"([^\\\\.]+)\"\n                    ]\n                },\n                \"de_stem_filter\" : {\n                    \"type\" : \"stemmer\",\n                    \"name\" : \"minimal_german\"\n                },\n                \"en_stem_filter\" : {\n                    \"type\" : \"stemmer\",\n                    \"name\" : \"minimal_english\"\n                },\n                \"es_stem_filter\" : {\n                    \"type\" : \"stemmer\",\n                    \"name\" : \"light_spanish\"\n                },\n                \"fi_stem_filter\" : {\n                    \"type\" : \"stemmer\",\n                    \"name\" : \"light_finish\"\n                },\n                \"fr_stem_filter\" : {\n                    \"type\" : \"stemmer\",\n                    \"name\" : \"minimal_french\"\n                },\n                \"hu_stem_filter\" : {\n                    \"type\" : \"stemmer\",\n                    \"name\" : \"light_hungarian\"\n                },\n                \"it_stem_filter\" : {\n                    \"type\" : \"stemmer\",\n                    \"name\" : \"light_italian\"\n                },\n                \"ja_pos_filter\" : {\n                    \"type\" : \"kuromoji_part_of_speech\",\n                    \"stoptags\" : [\n                        \"\\\\u52a9\\\\u8a5e-\\\\u683c\\\\u52a9\\\\u8a5e-\\\\u4e00\\\\u822c\",\n                        \"\\\\u52a9\\\\u8a5e-\\\\u7d42\\\\u52a9\\\\u8a5e\"\n                    ]\n                },\n                \"pt_stem_filter\" : {\n                    \"type\" : \"stemmer\",\n                    \"name\" : \"minimal_portuguese\"\n                },\n                \"pl_stem_filter\" : {\n                    \"type\" : \"stemmer\",\n                    \"name\" : \"polish_stem\"\n                },\n                \"ru_stem_filter\" : {\n                    \"type\" : \"stemmer\",\n                    \"name\" : \"light_russian\"\n                },\n                \"sv_stem_filter\" : {\n                    \"type\" : \"stemmer\",\n                    \"name\" : \"light_swedish\"\n                }\n            },\n            \"analyzer\" : {\n                \"host_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"tokenizer\" : \"whitespace\",\n                    \"filter\" : [\n                        \"host_pre_filter\",\n                        \"host_delimiter_filter1\",\n                        \"host_delimiter_filter2\",\n                        \"host_delimiter_filter1\",\n                        \"host_stop_filter\",\n                        \"en_stem_filter\",\n                        \"unique\"\n                    ]\n                },\n                \"path_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"tokenizer\" : \"path_tokenizer\"\n                },\n                \"query_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"tokenizer\" : \"query_tokenizer\"\n                },\n                \"ar_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"bg_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"ca_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"cs_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"da_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"de_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"de_stem_filter\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"el_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"en_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"en_stem_filter\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"es_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"es_stem_filter\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"fa_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"fi_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"fi_stem_filter\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"fr_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"elision\",\n                        \"fr_stem_filter\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"hu_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"hu_stem_filter\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"it_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"it_stem_filter\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"ja_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"kuromoji_baseform\",\n                        \"ja_pos_filter\",\n                        \"icu_normalizer\",\n                        \"icu_folding\",\n                        \"cjk_width\"\n                    ],\n                    \"tokenizer\" : \"kuromoji_tokenizer\"\n                },\n                \"ko_analyzer\" : {\n                    \"type\" : \"cjk\",\n                    \"filter\" : [ ]\n                },\n                \"lt_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"nl_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"no_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"pl_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"pt_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"pt_stem_filter\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"ro_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"ru_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"ru_stem_filter\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"sv_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"sv_stem_filter\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"th_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"tr_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                },\n                \"zh_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"smartcn_word\",\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"smartcn_sentence\"\n                },\n                \"lowercase_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"keyword\"\n                },\n                \"meta_keyword_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"meta_keyword_tokenizer\"\n                },\n                \"default_analyzer\" : {\n                    \"type\" : \"custom\",\n                    \"filter\" : [\n                        \"icu_normalizer\",\n                        \"icu_folding\"\n                    ],\n                    \"tokenizer\" : \"icu_tokenizer\"\n                }\n            },\n            \"tokenizer\" : {\n                \"meta_keyword_tokenizer\" : {\n                    \"type\": \"pattern\",\n                    \"pattern\" : \"[, \\\\t]\"\n                },\n                \"path_tokenizer\" : {\n                    \"type\": \"path_hierarchy\",\n                    \"delimiter\" : \"/\"\n                },\n                \"query_tokenizer\" : {\n                    \"type\": \"pattern\",\n                    \"pattern\" : \"[&=]\"\n                }\n            }\n        }\n    },\n    \"mappings\" : {\n        \"warcrecord\" : {\n            \"_all\" : {\n                \"enabled\" : false\n            },\n            \"_source\" : {\n                \"enabled\" : true,\n                \"excludes\" : [\n                    \"warc_target_query_string\",\n                    \"full_body_*\",\n                    \"headings_*\"\n                ]\n            },\n            \"properties\" : {\n                \"warc_trec_id\" : {\n                    \"type\" : \"keyword\"\n                },\n                \"warc_record_id\" : {\n                    \"type\" : \"keyword\"\n                },\n                \"warc_target_uri\" : {\n                    \"type\" : \"keyword\"\n                },\n                \"warc_target_hostname\" : {\n                    \"type\" : \"text\",\n                    \"similarity\" : \"BM25\",\n                    \"analyzer\" : \"host_analyzer\",\n                    \"fields\" : {\n                        \"raw\" : {\n                            \"type\" : \"keyword\"\n                        }\n                    }\n                },\n                \"warc_target_path\" : {\n                    \"type\" : \"text\",\n                    \"similarity\" : \"BM25\",\n                    \"analyzer\" : \"path_analyzer\",\n                    \"fields\" : {\n                        \"raw\" : {\n                            \"type\" : \"keyword\"\n                        }\n                    }\n                },\n                \"warc_target_query_string\" : {\n                    \"type\" : \"text\",\n                    \"similarity\" : \"BM25\",\n                    \"analyzer\" : \"query_analyzer\"\n                },\n                \"lang\" : {\n                    \"type\" : \"keyword\"\n                },\n                \"body_length\" : {\n                    \"type\" : \"long\"\n                },\n                \"content_type\" : {\n                    \"type\" : \"keyword\"\n                },\n                \"date\" : {\n                    \"type\" : \"date\",\n                    \"format\" : \"date_optional_time\"\n                },\n                \"meta_keywords\" : {\n                    \"type\" : \"text\",\n                    \"similarity\" : \"BM25\",\n                    \"analyzer\" : \"meta_keyword_analyzer\"\n                },\n                \"page_rank\" : {\n                    \"type\" : \"float\"\n                },\n                \"spam_rank\" : {\n                    \"type\" : \"byte\"\n                }\n            },\n            \"dynamic_templates\" : [\n                {\n                    \"ar\" : {\n                        \"path_match\" : \"*_lang.ar\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"ar_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n                    \"bg\" : {\n                        \"path_match\" : \"*_lang.bg\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"bg_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"ca\" : {\n                        \"path_match\" : \"*_lang.ca\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"ca_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"cs\" : {\n                        \"path_match\" : \"*_lang.cs\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"cs_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"da\" : {\n                        \"path_match\" : \"*_lang.da\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"da_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"de\" : {\n                        \"path_match\" : \"*_lang.de\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"de_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"el\" : {\n                        \"path_match\" : \"*_lang.el\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"el_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"en\" : {\n                        \"path_match\" : \"*_lang.en\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"en_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"es\" : {\n                        \"path_match\" : \"*_lang.es\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"es_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"fa\" : {\n                        \"path_match\" : \"*_lang.fa\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"fa_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"fi\" : {\n                        \"path_match\" : \"*_lang.fi\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"fi_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"fr\" : {\n                        \"path_match\" : \"*_lang.fr\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"fr_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"hu\" : {\n                        \"path_match\" : \"*_lang.hu\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"hu_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"it\" : {\n                        \"path_match\" : \"*_lang.it\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"it_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"ja\" : {\n                        \"path_match\" : \"*_lang.ja\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"ja_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"ko\" : {\n                        \"path_match\" : \"*_lang.ko\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"ko_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"lt\" : {\n                        \"path_match\" : \"*_lang.lt\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"lt_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"nl\" : {\n                        \"path_match\" : \"*_lang.nl\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"nl_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"no\" : {\n                        \"path_match\" : \"*_lang.no\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"no_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"pl\" : {\n                        \"path_match\" : \"*_lang.pl\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"pl_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"pt\" : {\n                        \"path_match\" : \"*_lang.pt\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"pt_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"ro\" : {\n                        \"path_match\" : \"*_lang.ro\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"ro_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"ru\" : {\n                        \"path_match\" : \"*_lang.ru\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"ru_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"sv\" : {\n                        \"path_match\" : \"*_lang.sv\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"sv_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"th\" : {\n                        \"path_match\" : \"*_lang.th\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"th_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"tr\" : {\n                        \"path_match\" : \"*_lang.tr\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"tr_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n\n                    \"zh\" : {\n                        \"path_match\" : \"*_lang.zh\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"zh_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                },\n                {\n                    \"unknown\" : {\n                        \"path_match\" : \"*_lang.unknown\",\n                        \"match_mapping_type\" : \"string\",\n                        \"mapping\" : {\n                            \"type\" : \"text\",\n                            \"analyzer\" : \"default_analyzer\",\n                            \"similarity\" : \"BM25\"\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Force Merge",
					"request": {
						"url": "http://{{eshost}}/{{index}}/_forcemerge?max_num_segments=1",
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Replica 2",
					"request": {
						"url": "http://{{eshost}}/{{index}}/_settings",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"index\" : {\n        \"number_of_replicas\" : 2\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Open Index",
					"request": {
						"url": "http://{{eshost}}/{{index}}/_open",
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Close Index",
					"request": {
						"url": "http://{{eshost}}/{{index}}/_close",
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Document",
					"request": {
						"url": "http://{{eshost}}/{{index}}/warcrecord",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"warc_trec_id\" : \"\",\n    \"warc_record_id\" : \"\",\n    \"warc_target_uri\" : \"\",\n    \"warc_target_hostname\" : \"\",\n    \"warc_target_hostname_raw\" : \"\",\n    \"warc_target_path\" : \"\",\n    \"warc_target_query_string\" : \"\",\n    \"lang\" : \"en\",\n    \"body_length\" : 0,\n    \"content_type\" : \"\",\n    \"date\" : \"2015-12-19T14:37:49Z\",\n    \"meta_keywords\" : \"\",\n    \"page_rank\" : \"\",\n    \"spam_rank\" : \"\",\n    \"body_lang_en\" : \"\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add Alias",
					"request": {
						"url": "http://{{eshost}}/_aliases",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"actions\" : [\n        { \"add\" : { \"index\" : \"{{index}}\", \"alias\" : \"alias\" } }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove Alias",
					"request": {
						"url": "http://{{eshost}}/_aliases",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"actions\" : [\n        { \"remove\" : { \"index\" : \"{{index}}\", \"alias\" : \"alias\" } }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "List Aliases",
					"request": {
						"url": "http://{{eshost}}/_aliases",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Settings",
					"request": {
						"url": "http://{{eshost}}/{{index}}/_settings",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"index\" : {\n        \"refresh_interval\" : \"60s\"\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Analyze",
					"request": {
						"url": "http://{{eshost}}/{{index}}/_analyze?field=body_lang_en",
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "this is a test"
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}